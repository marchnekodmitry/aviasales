{"version":3,"sources":["components/transfer-count/checkbox.svg","components/transfer-count/checkbox-active.svg","components/app-header/logo.svg","actions/index.js","components/transfer-count/transfer-count.js","components/transfer-count/index.js","components/sort-type/sort-type.js","components/sort-type/index.js","utils/index.js","components/ticket-list-item/ticket-list-item.js","components/ticket-list-item/index.js","components/loading-boundary/loading-boundary.js","components/loading-boundary/index.js","components/error-boundary/error-boundary.js","components/ticket-list/ticket-list.js","components/ticket-list/index.js","components/app-header/app-header.js","components/app-header/index.js","components/page-grid/page-grid.js","components/page-grid/index.js","components/app/app.js","components/app/index.js","components/error-boundary/index.js","reducers/index.js","services/avia-service.js","sagas/sagas.js","sagas/index.js","store.js","index.js"],"names":["module","exports","fetchTicketsSucceeded","tickets","type","payload","fetchTicketsFailed","StyledWrapper","styled","div","StyledTitle","p","StyledList","ul","StyledItem","li","StyledLabel","label","InputText","require","TransferCount","connect","transferCount","sort","dispatch","transferCountHandler","e","target","getAttribute","TransferCountItem","dataCount","checked","children","className","data-count","onChange","all","SortType","sortType","sortTypeHandler","SortTypeItem","dataSort","name","data-sort","cheap","fast","findKeysOfTrueField","obj","R","transferCountSelector","createSelector","state","filterValues","v","parseInt","hasInFilterValues","stops","length","isPassFilter","sortTickets","f","g","param","generateHashForEachTicket","hash","mergeWithTickets","key","left","right","getTransferCities","TicketHead","StyledTable","table","TicketListItem","ticket","price","carrier","segments","tableSection","num","origin","destination","getTransferString","date","duration","departureTime","exec","slice","totalMins","arrivalHours","Math","floor","arrivalMins","dateToDepartureArrivalConvert","mins","string","Infinity","convertPrice","rotate","keyframes","StyledSpinner","RelativeDiv","SpinnerBackground","Spinner","LoadingBoundary","loading","StyledError","StyledLink","a","ErrorIndicator","requestData","href","onClick","ErrorBoundary","error","requestFunc","preventDefault","TicketList","map","TicketListEnhancer","this","props","fetchTicketsRequest","Component","Logo","img","AppHeader","src","alt","Wrapper","LeftSide","RightSide","PageGrid","top","GlobalStyle","createGlobalStyle","App","initialState","0","1","2","3","reducer","action","_apiBase","getSearchId","getResource","searchId","getTickets","url","fetch","res","ok","console","status","Error","json","fetchTickets","log","rootSaga","received","call","AviaService","ticketsPack","stop","take","result","attempts","response","put","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.68784d08.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checkbox.ebdd84bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/checkbox-active.fc4db7ee.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.96990a1b.svg\";","const fetchTicketsRequest = () => {\r\n  return {\r\n    type: 'TICKETS_FETCH_REQUESTED'\r\n  }\r\n};\r\n\r\nconst fetchTicketsSucceeded = (tickets) => {\r\n  return {\r\n    type: 'TICKETS_FETCH_SUCCEEDED',\r\n    payload: tickets\r\n  }\r\n};\r\n\r\nconst fetchTicketsFailed = (tickets) => {\r\n  return {\r\n    type: 'TICKETS_FETCH_FAILED',\r\n    payload: tickets\r\n  }\r\n};\r\n\r\nconst changeTransferCount = (count) => {\r\n  return {\r\n    type: 'CHANGE_TRANSFER_COUNT',\r\n    payload: count\r\n  }\r\n};\r\n\r\nconst changeSortType = (type) => {\r\n  return {\r\n    type: 'CHANGE_SORT_TYPE',\r\n    payload: type\r\n  }\r\n};\r\n\r\nexport {\r\n  fetchTicketsRequest,\r\n  fetchTicketsSucceeded,\r\n  fetchTicketsFailed,\r\n  changeTransferCount,\r\n  changeSortType\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { changeTransferCount } from './../../actions';\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 20px 0 10px 0;\r\n  background-color: #FFFFFF;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  \r\n  .visually-hidden {\r\n    position: absolute;\r\n    clip: rect(0 0 0 0);\r\n    width: 1px;\r\n    height: 1px;\r\n    margin: -1px;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.p`\r\n  margin: 0 0 10px 0;\r\n  padding: 0 20px;\r\n  font-family: 'Open Sans';\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  color: #4A4A4A;\r\n`;\r\n\r\nconst StyledList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  \r\n  font-family: Open Sans;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n`;\r\n\r\nconst StyledItem = styled.li`    \r\n  :hover {\r\n    background: #F1FCFF;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst InputText = styled.div`\r\n  position: relative;\r\n  padding-left: 30px;\r\n\r\n  ::before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0;\r\n    width: 20px;\r\n    height: 20px;\r\n    background-image: url(${require('./checkbox.svg')});\r\n  }\r\n  input:checked + & {\r\n    ::before {\r\n      background-image: url(${require('./checkbox-active.svg')});\r\n    }\r\n  }\r\n`;\r\n\r\nconst TransferCount = ({ transferCount, transferCountHandler }) => {\r\n  const TransferCountItem = ({ dataCount, checked, children }) => {\r\n    return (\r\n      <StyledItem className='item'>\r\n        <StyledLabel>\r\n          <input type='checkbox'\r\n                 data-count={dataCount}\r\n                 onChange={(e) => transferCountHandler(e)}\r\n                 checked={checked}\r\n                 className='visually-hidden'/>\r\n          <InputText className='checkbox-text'>{children}</InputText>\r\n        </StyledLabel>\r\n      </StyledItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <StyledTitle>Количество пересадок</StyledTitle>\r\n      <StyledList>\r\n        <TransferCountItem dataCount='all' checked={transferCount.all}>\r\n          Все\r\n        </TransferCountItem>\r\n        <TransferCountItem dataCount='0' checked={transferCount[0]}>\r\n          0 пересадок\r\n        </TransferCountItem>\r\n        <TransferCountItem dataCount='1' checked={transferCount[1]}>\r\n          1 пересадка\r\n        </TransferCountItem>\r\n        <TransferCountItem dataCount='2' checked={transferCount[2]}>\r\n          2 пересадки\r\n        </TransferCountItem>\r\n        <TransferCountItem dataCount='3' checked={transferCount[3]}>\r\n          3 пересадки\r\n        </TransferCountItem>\r\n      </StyledList>\r\n    </StyledWrapper>\r\n  )\r\n};\r\n\r\nconst transferCountHandler = (e) => {\r\n  return changeTransferCount(e.target.getAttribute('data-count'))\r\n};\r\n\r\nconst mapStateToProps = ({ sort }) => {\r\n  return {\r\n    transferCount: sort.transferCount\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    transferCountHandler: (e) => dispatch(transferCountHandler(e))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TransferCount)","import TransferCount from './transfer-count';\r\n\r\nexport default TransferCount;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { changeSortType } from './../../actions';\r\n\r\nconst StyledWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n  font-family: Open Sans;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.5px;\r\n  text-transform: uppercase;\r\n  color: #FFFFFF;overflow: hidden;\r\n  \r\n  \r\n  .visually-hidden {\r\n    position: absolute;\r\n    clip: rect(0 0 0 0);\r\n    width: 1px;\r\n    height: 1px;\r\n    margin: -1px;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  cursor: pointer;\r\n  \r\n  :first-child .input-text {\r\n    border-radius: 8px 0 0 8px;\r\n  }\r\n  :last-child .input-text {\r\n    border-radius: 0 8px 8px 0;\r\n  }\r\n`;\r\n\r\nconst InputText = styled.div`\r\n  padding: 15px 57px;\r\n  border: 1px solid #DFE5EC;\r\n  background-color: #FFFFFF;\r\n  color: #4A4A4A;\r\n  \r\n  input:checked + & {\r\n    background-color: #2196F3;\r\n    color: #FFFFFF;\r\n  }\r\n`;\r\n\r\nconst SortType = ({ sortType, sortTypeHandler }) => {\r\n  const SortTypeItem = ({ dataSort, children, checked }) => {\r\n    return (\r\n      <StyledLabel>\r\n        <input\r\n            name='sort'\r\n            type='radio'\r\n            data-sort={dataSort}\r\n            checked={checked}\r\n            onChange={(e) => sortTypeHandler(e)}\r\n            className='visually-hidden'/>\r\n        <InputText className='input-text'>{children}</InputText>\r\n      </StyledLabel>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <SortTypeItem dataSort={'cheap'} checked={sortType.cheap}>\r\n        Самый дешевый\r\n      </SortTypeItem>\r\n      <SortTypeItem dataSort={'fast'} checked={sortType.fast}>\r\n        Самый быстрый\r\n      </SortTypeItem>\r\n    </StyledWrapper>\r\n  )\r\n};\r\n\r\nconst sortTypeHandler = (e) => {\r\n  return changeSortType(e.target.getAttribute('data-sort'))\r\n};\r\n\r\nconst mapStateToProps = ({ sort }) => {\r\n  return {\r\n    sortType: sort.sortType\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sortTypeHandler: (e) => dispatch(sortTypeHandler(e))\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SortType)","import SortType from './sort-type';\r\n\r\nexport default SortType;","import * as R from 'ramda';\r\nimport { createSelector } from 'reselect';\r\nimport hash from 'hash-sum';\r\n\r\nconst findKeysOfTrueField = (obj) => {\r\n  return R.filter(\r\n    R.flip(R.prop)(obj),\r\n    R.keys(obj)\r\n  )\r\n};\r\n\r\nconst getTickets = state => state.tickets;\r\nconst getTransferCount = state => state.sort.transferCount;\r\nconst getSortType = state => state.sort.sortType;\r\n\r\nconst transferCountSelector = createSelector(\r\n  [getTickets, getTransferCount],\r\n  (tickets, transferCount) => {\r\n    if (transferCount.all) return tickets;\r\n    const filterValues = R.map((v) => parseInt(v), findKeysOfTrueField(transferCount));\r\n    const hasInFilterValues = (stops) => R.includes(stops.length, filterValues);\r\n    const isPassFilter = R.allPass([\r\n      R.pathSatisfies(hasInFilterValues, ['segments', 0, 'stops']),\r\n      R.pathSatisfies(hasInFilterValues, ['segments', 1, 'stops'])\r\n    ]);\r\n    return R.filter(isPassFilter)(tickets);\r\n  }\r\n);\r\n\r\nconst sortTickets = createSelector(\r\n  [transferCountSelector, getSortType],\r\n  (tickets, sortType) => {\r\n    switch(findKeysOfTrueField(sortType)[0]) {\r\n      case 'cheap':\r\n        return R.sortBy(R.prop('price'))(tickets);\r\n      case 'fast':\r\n        const sum = (f, g) => (param) => {\r\n          return f(param) + g(param);\r\n        };\r\n        return R.sortBy(sum(\r\n          R.path(['segments', 0, 'duration']),\r\n          R.path(['segments', 1, 'duration'])\r\n        ))(tickets);\r\n      default:\r\n        return tickets;\r\n    }\r\n  }\r\n);\r\n\r\nconst generateHashForEachTicket = R.map(obj => R.assoc('hash', hash(obj), obj));\r\n\r\nconst mergeWithTickets = R.mergeWithKey(\r\n  (key, left, right) => key === 'tickets' ? R.concat(left, right) : right\r\n);\r\n\r\nconst getTransferString = (stops) => {\r\n  const transferCount = stops.length;\r\n  switch (transferCount) {\r\n    case 1: return `${transferCount} пересадка`;\r\n    case 2:\r\n    case 3:\r\n    case 4: return `${transferCount} пересадки`;\r\n    case 5:\r\n    case 6:\r\n    case 7:\r\n    case 8:\r\n    case 9:\r\n    case 0: return `${transferCount} пересадок`;\r\n    default: return `${transferCount} пересадка`;\r\n  }\r\n};\r\n\r\nconst timeConvert = (mins) => {\r\n  return `${Math.floor(mins / 60)}ч ${mins % 60}м`;\r\n};\r\n\r\nconst dateToDepartureArrivalConvert = (date, duration) => {\r\n  const departureTime = /T\\d\\d:\\d\\d/.exec(date)[0].slice(1);\r\n  const timeMins = parseInt(departureTime.slice(3));\r\n  const timeHours = parseInt(departureTime.slice(0, 2));\r\n  const totalMins = timeMins + timeHours * 60 + duration;\r\n  const arrivalHours = `0${(Math.floor(totalMins / 60) % 24)}`.slice(-2);\r\n  const arrivalMins = `0${totalMins % 60}`.slice(-2);\r\n  return `${departureTime} - ${arrivalHours}:${arrivalMins}`\r\n};\r\n\r\nconst getTransferCities = R.join(', ');\r\n\r\nconst convertPrice = (price) => {\r\n  const string = R.toString(price);\r\n  return `${R.slice(0, -3, string)} ${R.slice(-3, Infinity, string)} Р`;\r\n};\r\n\r\nexport {\r\n  findKeysOfTrueField,\r\n  sortTickets,\r\n  generateHashForEachTicket,\r\n  mergeWithTickets,\r\n  getTransferString,\r\n  timeConvert,\r\n  getTransferCities,\r\n  dateToDepartureArrivalConvert,\r\n  convertPrice\r\n}","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { getTransferString,\r\n         timeConvert,\r\n         getTransferCities,\r\n         dateToDepartureArrivalConvert,\r\n         convertPrice } from '../../utils';\r\n\r\nconst StyledItem = styled.li`\r\n  margin-bottom: 20px;\r\n  padding: 20px;\r\n  background: #FFFFFF;\r\n  box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst TicketHead = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n  \r\n  p {\r\n    margin: 0;\r\n  }\r\n  \r\n  .price {\r\n    font-family: Open Sans;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n    color: #2196F3;\r\n  }\r\n  \r\n  .company {\r\n    font-family: Open Sans;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n    line-height: 24px;\r\n  }\r\n`;\r\n\r\nconst StyledTable = styled.table`\r\n  width: 100%;\r\n  th {\r\n    width: 33%;\r\n    font-family: Open Sans;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    letter-spacing: 0.5px;\r\n    text-transform: uppercase;\r\n    color: #A0B0B9;\r\n  }\r\n  \r\n  td {\r\n    font-family: Open Sans;\r\n    font-style: normal;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n    line-height: 21px;\r\n    color: #4A4A4A;\r\n  }\r\n`;\r\n\r\nconst TicketListItem = ({ ticket }) => {\r\n  const { price, carrier, segments } = ticket;\r\n\r\n  const tableSection = (num) => {\r\n    return (\r\n      <Fragment>\r\n        <tr>\r\n          <th>{segments[num].origin} - {segments[num].destination}</th>\r\n          <th>В пути</th>\r\n          <th>{getTransferString(segments[num].stops)}</th>\r\n        </tr>\r\n        <tr>\r\n          <td>{dateToDepartureArrivalConvert(segments[num].date, segments[num].duration)}</td>\r\n          <td>{timeConvert(segments[num].duration)}</td>\r\n          <td>{getTransferCities(segments[num].stops)}</td>\r\n        </tr>\r\n      </Fragment>\r\n    )\r\n  };\r\n\r\n  return (\r\n    <StyledItem>\r\n      <TicketHead>\r\n        <p className='price'>{convertPrice(price)}</p>\r\n        <p className='company'>{carrier}</p>\r\n      </TicketHead>\r\n      <StyledTable>\r\n        <tbody>\r\n          {tableSection(0)}\r\n          {tableSection(1)}\r\n        </tbody>\r\n      </StyledTable>\r\n    </StyledItem>\r\n  )\r\n};\r\n\r\nexport default TicketListItem;","import TicketListItem from './ticket-list-item';\r\n\r\nexport default TicketListItem;","import React from 'react';\r\nimport styled, {keyframes} from 'styled-components';\r\n\r\nconst rotate = keyframes`\r\n  from {\r\n    transform: rotate(0deg);\r\n  }\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst StyledSpinner = styled.div`\r\n  position: absolute;\r\n  left: calc(50% - 10px);\r\n  top: calc(50% - 10px);\r\n\r\n  width: 20px;\r\n  height: 20px;\r\n  background-color: #2196F3;\r\n  animation: ${rotate} 2s ease-in-out infinite;\r\n`;\r\n\r\nconst RelativeDiv = styled.div`position: relative;`;\r\n\r\nconst SpinnerBackground = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-color: rgba(255, 255, 255, .7);\r\n`;\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <SpinnerBackground>\r\n      <StyledSpinner/>\r\n    </SpinnerBackground>\r\n  )\r\n};\r\n\r\nconst LoadingBoundary = ({ loading, children }) => {\r\n  return (\r\n      <RelativeDiv>\r\n        {children}\r\n        {loading ? <Spinner/> : null}\r\n      </RelativeDiv>\r\n  );\r\n};\r\n\r\nexport default LoadingBoundary;\r\n","import LoadingBoundary from './loading-boundary';\r\n\r\nexport default LoadingBoundary;\r\n","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledError = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  padding: 10px;\r\n  background-color: tomato;\r\n  border-radius: 0 10px 0 0;\r\n  \r\n  font-family: Open Sans;\r\n  font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 20px;\r\n  letter-spacing: 0.5px;\r\n  color: #FFFFFF;\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  color: #FFFFFF;\r\n`;\r\n\r\nconst ErrorIndicator = ({ requestData }) => {\r\n  return (\r\n    <StyledError>\r\n      Ошибка: не все билеты загружены. <StyledLink href='request' onClick={(e) => requestData(e)}>Попробуйте снова</StyledLink>\r\n    </StyledError>\r\n  )\r\n};\r\n\r\nconst ErrorBoundary = ({ error, children, requestFunc }) => {\r\n  const requestData = (e) => {\r\n    e.preventDefault();\r\n    requestFunc()\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {children}\r\n      {error ? <ErrorIndicator requestData={requestData}/> : null}\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport TicketListItem from './../ticket-list-item';\r\nimport { fetchTicketsRequest } from './../../actions';\r\nimport { sortTickets } from './../../utils';\r\nimport LoadingBoundary from '../loading-boundary';\r\nimport ErrorBoundary from \"../error-boundary/error-boundary\";\r\n\r\nconst StyledList = styled.ul`\r\n  min-height: 180px;\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n`;\r\n\r\nconst TicketList = ({ tickets }) => {\r\n  return (\r\n    <StyledList>\r\n      {tickets.slice(0, 5).map(ticket => {\r\n        return <TicketListItem ticket={ticket} key={ticket.hash}/>\r\n      })}\r\n    </StyledList>\r\n  )\r\n};\r\n\r\nclass TicketListEnhancer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchTicketsRequest()\r\n  }\r\n\r\n  render() {\r\n    const { tickets, loading, error } = this.props;\r\n\r\n    return (\r\n      <ErrorBoundary error={error} requestFunc={this.props.fetchTicketsRequest}>\r\n        <LoadingBoundary loading={loading}>\r\n          <TicketList tickets={tickets}/>\r\n        </LoadingBoundary>\r\n      </ErrorBoundary>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    tickets: sortTickets(state),\r\n    loading: state.loading,\r\n    error: state.error\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchTicketsRequest: () => dispatch(fetchTicketsRequest())\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TicketListEnhancer)","import TicketList from './ticket-list';\r\n\r\nexport default TicketList;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Logo = styled.img`\r\n  display: block;\r\n  margin: 0 auto;\r\n  padding: 50px 0;\r\n`;\r\n\r\nconst AppHeader = () => {\r\n  return (\r\n    <header>\r\n      <Logo src={require('./logo.svg')} alt='logo'/>\r\n    </header>\r\n  )\r\n};\r\n\r\nexport default AppHeader","import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React, { Fragment } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  max-width: 755px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nconst LeftSide = styled.div`\r\n  width: 30%;\r\n  min-width: 232px;\r\n  padding-right: 20px;\r\n`;\r\n\r\nconst RightSide = styled.div`\r\n  \r\n`;\r\n\r\nconst PageGrid = ({ left, right, top }) => {\r\n  return (\r\n    <Fragment>\r\n      {top}\r\n      <Wrapper>\r\n        <LeftSide>\r\n          {left}\r\n        </LeftSide>\r\n        <RightSide>\r\n          {right}\r\n        </RightSide>\r\n      </Wrapper>\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default PageGrid;","import PageGrid from './page-grid';\r\n\r\nexport default PageGrid;","import React, { Fragment } from 'react';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nimport TransferCount from './../transfer-count';\r\nimport SortType from './../sort-type';\r\nimport TicketList from './../ticket-list';\r\nimport AppHeader from './../app-header';\r\nimport PageGrid from './../page-grid';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  @import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600&display=swap&subset=cyrillic');\r\n  body {\r\n    background: #F3F7FA;\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <GlobalStyle/>\r\n      <PageGrid\r\n        top={\r\n          <AppHeader/>\r\n        }\r\n        left={\r\n          <TransferCount/>\r\n        }\r\n        right={\r\n          <Fragment>\r\n            <SortType/>\r\n            <TicketList/>\r\n          </Fragment>\r\n        }\r\n      />\r\n    </Fragment>\r\n  )\r\n};\r\n\r\nexport default App;","import App from './app';\r\n\r\nexport default App;","import ErrorBoundary from './error-boundary';\r\n\r\nexport default ErrorBoundary;\r\n","import { findKeysOfTrueField, generateHashForEachTicket } from '../utils';\r\n\r\nconst initialState = {\r\n  tickets: [],\r\n  sort: {\r\n    transferCount: {\r\n      all: true,\r\n      0: false,\r\n      1: false,\r\n      2: false,\r\n      3: false\r\n    },\r\n    sortType: {  // only 1 can be true\r\n      cheap: true,\r\n      fast: false\r\n    }\r\n  },\r\n  loading: false,\r\n  error: false\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE_TRANSFER_COUNT':\r\n      return {\r\n        ...state,\r\n        sort: {\r\n          ...state.sort,\r\n          transferCount: {\r\n            ...state.sort.transferCount,\r\n            [action.payload]: !state.sort.transferCount[action.payload]\r\n          }\r\n        }\r\n      };\r\n    case 'CHANGE_SORT_TYPE':\r\n      return {\r\n        ...state,\r\n        sort: {\r\n          ...state.sort,\r\n          sortType: {\r\n            ...state.sort.sortType,\r\n            [findKeysOfTrueField(state.sort.sortType)]: false,\r\n            [action.payload]: true\r\n          }\r\n        }\r\n      };\r\n    case 'TICKETS_FETCH_REQUESTED':\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case 'TICKETS_FETCH_SUCCEEDED':\r\n      return {\r\n        ...state,\r\n        tickets: generateHashForEachTicket(action.payload),\r\n        loading: false\r\n      };\r\n    case 'TICKETS_FETCH_FAILED':\r\n      return {\r\n        ...state,\r\n        tickets: generateHashForEachTicket(action.payload),\r\n        loading: false,\r\n        error: false // ===========================================================\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","class AviaService {\r\n  _apiBase = 'https://front-test.beta.aviasales.ru/';\r\n\r\n  async getResource(url) {\r\n    const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n    if(!res.ok) {\r\n      console.error(`Could not fetch ${url}, received ${res.status}`);\r\n      throw new Error();\r\n    }\r\n\r\n    return await res.json();\r\n  }\r\n\r\n  getSearchId = async () => {\r\n    const searchId = await this.getResource('search');\r\n    this.searchId = searchId.searchId;\r\n  };\r\n\r\n  getTickets = () => {\r\n    return this.getResource(`tickets?searchId=${this.searchId}`);\r\n  }\r\n}\r\n\r\nexport default new AviaService();","import { call, put, take, all } from 'redux-saga/effects';\r\nimport AviaService from './../services/avia-service';\r\nimport { fetchTicketsSucceeded, fetchTicketsFailed } from './../actions';\r\nimport { mergeWithTickets } from '../utils';\r\n\r\nfunction* getTickets() {\r\n  let received = false,\r\n      tickets = [],\r\n      error = false;\r\n\r\n  try {\r\n    while (!received) {\r\n      let {tickets: ticketsPack, stop} = yield call(AviaService.getTickets);\r\n      received = stop;\r\n      tickets = [...tickets, ...ticketsPack];\r\n    }\r\n  } catch (e) {\r\n    error = true;\r\n  } finally {\r\n    return {\r\n      tickets,\r\n      error\r\n    }\r\n  }\r\n}\r\n\r\nfunction* fetchTickets() {\r\n  while (true) {\r\n    yield take('TICKETS_FETCH_REQUESTED');\r\n    let result = {},\r\n        attempts = 0;\r\n\r\n    try {\r\n      yield call(AviaService.getSearchId);\r\n\r\n      do {\r\n        const response = yield getTickets();\r\n        result = mergeWithTickets(result, response);\r\n        attempts++\r\n      } while (result.error && attempts < 5);\r\n\r\n      result.error ?\r\n        yield put(fetchTicketsFailed(result.tickets)) :\r\n        yield put(fetchTicketsSucceeded(result.tickets));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n}\r\n\r\nfunction* log() {\r\n  while (true) {\r\n    const action = yield take('*');\r\n    console.log(action);\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fetchTickets(),\r\n    log()\r\n  ]);\r\n}","import rootSaga from './sagas';\r\n\r\nexport default rootSaga;","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport reducer from './reducers';\r\nimport rootSaga from './sagas';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n    reducer,\r\n    applyMiddleware(sagaMiddleware)\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/app';\r\nimport ErrorBoundary from './components/error-boundary';\r\n\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundary>\r\n      <App/>\r\n    </ErrorBoundary>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}